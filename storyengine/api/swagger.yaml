swagger: '2.0'
info:
  title: StoryTechnologies Story API
  version: '0.2'
consumes:
  - application/json
produces:
  - application/json
basePath: /1.0
paths:
  '/maps/{topic_map_identifier}/identifiers':
    get:
      operationId: storyengine.api.service.get_topic_identifiers
      summary: Get topic identifiers
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - name: query
          description: Query string
          in: query
          type: string
          required: true
          pattern: "^\\*|[a-zA-Z0-9-]+$"
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: Return topic identifiers
        404:
          description: No topics exist
  '/maps/{topic_map_identifier}/topics':
    get:
      operationId: storyengine.api.service.get_topics
      summary: Get topics
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/instance_of'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
      responses:
        200:
          description: Return topics
        404:
          description: No topics exist
  '/maps/{topic_map_identifier}/topics/{identifier}':
    get:
      operationId: storyengine.api.service.get_topic
      summary: Get a single topic
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
      responses:
        200:
          description: Return topic
        404:
          description: Topic does not exist
  '/maps/{topic_map_identifier}/topics/{identifier}/occurrences':
    get:
      operationId: storyengine.api.service.get_topic_occurrences
      summary: Get the occurrences for a given topic
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
        - $ref: '#/parameters/instance_of'
      responses:
        200:
          description: Return occurrences
        404:
          description: Topic does not have occurrences
  '/maps/{topic_map_identifier}/topics/{identifier}/associations':
    get:
      operationId: storyengine.api.service.get_associations
      summary: Get the associations for a given topic
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
      responses:
        200:
          description: Return associations
        404:
          description: Topic does not have associations
  '/maps/{topic_map_identifier}/scenes/{identifier}':
    get:
      operationId: storyengine.api.service.get_scene
      summary: Get a single scene
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
      responses:
        200:
          description: Return scene
        404:
          description: Scene does not exist
  '/maps/{topic_map_identifier}/scenes/{identifier}/tags':
    get:
      operationId: storyengine.api.service.get_scene_tags
      summary: Get the tags for the scene's entities
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
      responses:
        200:
          description: Return tags
        404:
          description: Scene does not have any tagged entities
  '/maps/{topic_map_identifier}/props/{identifier}':
    get:
      operationId: storyengine.api.service.get_prop
      summary: Get a single prop
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
      responses:
        200:
          description: Return prop
        404:
          description: Prop does not exist
  '/maps/{topic_map_identifier}/characters/{identifier}':
    get:
      operationId: storyengine.api.service.get_character
      summary: Get a single character
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
      responses:
        200:
          description: Return character
        404:
          description: Character does not exist
  '/maps/{topic_map_identifier}/hierarchies/{identifier}':
    get:
      operationId: storyengine.api.service.get_topics_hierarchy
      summary: Pending
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
      responses:
        200:
          description: Return topics hierarchy
        404:
          description: Topics hierarchy is not available
  '/maps/{topic_map_identifier}/networks/{identifier}':
    get:
      operationId: storyengine.api.service.get_network
      summary: Pending
      parameters:
        - $ref: '#/parameters/topic_map_identifier'
        - $ref: '#/parameters/identifier'
      responses:
        200:
          description: Return network data structure
        404:
          description: Network data structure is not available
  '/stories':
    get:
      operationId: storyengine.api.service.get_stories
      summary: Get stories
      responses:
        200:
          description: Return stories
        404:
          description: No stories exist
  '/stories/{story_identifier}':
    get:
      operationId: storyengine.api.service.get_story
      summary: Get a single story
      parameters:
        - $ref: '#/parameters/story_identifier'
      responses:
        200:
          description: Return story
        404:
          description: Story does not exist

parameters:
  story_identifier:
    name: story_identifier
    description: Unique story identifier
    in: path
    type: integer
    required: true
  topic_map_identifier:
    name: topic_map_identifier
    description: Unique (topic) map identifier
    in: path
    type: integer
    required: true
  identifier:
    name: identifier
    description: Unique identifier
    in: path
    type: string
    required: true
    pattern: "^\\*|[a-zA-Z0-9-]+$"
  instance_of:
    name: instance_of
    description: Unique 'instance of' identifier
    in: query
    type: string
    required: false
    pattern: "^\\*|[a-zA-Z0-9-]+$"
  offset:
    name: offset
    description: Positive number
    in: query
    type: number
    required: false
    pattern: "^[0-9]+$"
  limit:
    name: limit
    description: Positive number
    in: query
    type: number
    required: false
    pattern: "^[0-9]+$"
